/*! ngs3upload 01-06-2015 */
"use strict";angular.module("ngS3upload.config",[]).value("ngS3upload.config",{debug:!0}).config(["$compileProvider",function(a){angular.isDefined(a.urlSanitizationWhitelist)?a.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/):a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)}]),angular.module("ngS3upload.directives",[]),angular.module("ngS3upload",["ngS3upload.config","ngS3upload.directives","ngS3upload.services","ngSanitize"]),angular.module("ngS3upload.config",[]).constant("ngS3Config",{theme:"bootstrap3"}),angular.module("ngS3upload.services",[]).service("S3Uploader",["$http","$q","$window","$timeout",function(a,b,c,d){this.uploads=0;var e=this;this.getUploadOptions=function(c){var d=b.defer();return a.get(c).success(function(a,b){d.resolve(a)}).error(function(a,b){d.reject(a)}),d.promise},this.randomString=function(a){for(var b="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",c="",d=a;d>0;--d)c+=b[Math.round(Math.random()*(b.length-1))];return c},this.upload=function(a,c,f,g,h,i,j,k,l){function m(b){a.$apply(function(){a.progress=b.lengthComputable?Math.round(100*b.loaded/b.total):"unable to compute";var c={type:"progress",value:a.progress};a.$emit("s3upload:progress",c),"function"==typeof q.notify&&q.notify(c)})}function n(b){var g=b.srcElement||b.target;a.$apply(function(){e.uploads--,a.uploading=!1,d(function(){a.progress=0},300),204===g.status?(a.success=!0,q.resolve(g),a.$emit("s3upload:success",g,{path:c+f})):(a.success=!1,q.reject(g),a.$emit("s3upload:error",g))})}function o(b){var c=b.srcElement||b.target;a.$apply(function(){e.uploads--,a.uploading=!1,a.success=!1,q.reject(c),a.$emit("s3upload:error",c)})}function p(b){var c=b.srcElement||b.target;a.$apply(function(){e.uploads--,a.uploading=!1,a.success=!1,q.reject(c),a.$emit("s3upload:abort",c)})}var q=b.defer();a.attempt=!0;var r=new FormData;r.append("key",f),r.append("acl",g),r.append("Content-Type",l.type),r.append("AWSAccessKeyId",i),r.append("policy",j),r.append("signature",k),r.append("file",l);var s=new XMLHttpRequest;return s.upload.addEventListener("progress",m,!1),s.addEventListener("load",n,!1),s.addEventListener("error",o,!1),s.addEventListener("abort",p,!1),a.$emit("s3upload:start",s),a.uploading=!0,this.uploads++,s.open("POST",c,!0),s.send(r),q.promise},this.isUploading=function(){return this.uploads>0}}]),angular.module("ngS3upload.directives",[]).directive("s3Upload",["$parse","S3Uploader","ngS3Config",function(a,b,c){return{restrict:"AC",require:"?ngModel",replace:!0,transclude:!1,scope:!0,controller:["$scope","$element","$attrs","$transclude",function(a,b,c,d){a.attempt=!1,a.success=!1,a.uploading=!1}],compile:function(a,c,d){return{pre:function(a,b,c){if(angular.isUndefined(c.bucket))throw Error("bucket is a mandatory attribute")},post:function(a,c,d,e){function f(){m.addEventListener("dragover",g,!1),m.addEventListener("dragleave",g,!1),m.addEventListener("drop",h,!1),m.style.display="block"}function g(a){a.stopPropagation(),a.preventDefault(),a.target.className="dragover"==a.type?"hover":""}function h(a){g(a),i((a.target.files||a.dataTransfer.files)[0])}function i(c){function f(f){j.enableValidation&&e.$setValidity("uploading",!1),console.log(d.s3Url);var g="http://"+d.s3Url+"/"+k;console.log(g);var h=j.folder+(new Date).getTime()+"-"+b.randomString(16)+"."+i;b.upload(a,g,h,j.acl,c.type,f.key,f.policy,f.signature,c).then(function(){e.$setViewValue(g+"/"+h),a.filename=e.$viewValue,j.enableValidation&&(e.$setValidity("uploading",!0),e.$setValidity("succeeded",!0))},function(){a.filename=e.$viewValue,j.enableValidation&&(e.$setValidity("uploading",!0),e.$setValidity("succeeded",!1))})}var g,h,i;return 0===arguments.length&&(c=l.files[0]),g=c.name,h=!1,(h=j.mimeTypes.length>0?j.mimeTypes.some(function(a){return c.type.match(a)?!0:!1}):!0)?(a.displayError=!1,i=g.split(".").pop(),void(angular.isObject(j.getManualOptions)?f(j.getManualOptions):b.getUploadOptions(j.getOptionsUri).then(function(a){f(a)},function(a){throw Error("Can't receive the needed options for S3 "+a)}))):void(a.displayError=!0)}var j=angular.extend({},a.$eval(d.s3UploadOptions||d.options));j=angular.extend({submitOnChange:!0,getOptionsUri:"/getS3Options",getManualOptions:null,mimeTypes:[],acl:"public-read",uploadingKey:"uploading",folder:"",buttonText:"Select File",dropText:"Drop File Here",errorText:"Incorrect File Type",enableValidation:!0,targetFilename:null},j);var k=a.$eval(d.bucket);a.buttonText=j.buttonText,a.dropText=j.dropText,a.errorText=j.errorText,a.displayError=!1;var l=document.getElementById("s3-file-target"),m=document.getElementById("s3-drop-target");m.addEventListener("click",function(a){l.click()}),window.File&&window.FileList&&window.FileReader&&f(),e.$render=function(){a.filename=e.$viewValue},c.bind("change",function(b){j.submitOnChange&&a.$apply(function(){i()})}),angular.isDefined(d.doUpload)&&a.$watch(d.doUpload,function(a){a&&i()})}}},templateUrl:"ng-easyS3.html"}}]),angular.module("ngS3upload").run(["$templateCache",function(a){a.put("ng-easyS3.html",'<div class="upload-wrap">\n  <style scoped>\n    #s3-drop-target{\n      height: 100px;\n      width: 100%;\n      display: flex !important;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      border-radius: 8px;\n      border: 3px dashed #999;\n      color: #999;\n      font-size: 24px;\n      font-weight: bold;\n      text-transform: capitalize;\n      background-color: rgb(238, 238, 238);\n    }\n\n    #s3-drop-target.hover{\n      border: 3px dashed #777;\n      color: #777;\n      background-color: rgb(225, 225, 225);\n    }\n\n    #s3-drop-target:hover{\n      border: 3px dashed #777;\n      color: #777;\n      background-color: rgb(225, 225, 225);\n      cursor: pointer;\n    }\n\n    .progress{\n      margin-bottom: 0;\n      height: 50%;\n    }\n\n    .S3-front, .S3-back{\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n    }\n\n    /* entire container, keeps perspective */\n    .S3-display {\n      perspective: 1000;\n      position: relative;\n    }\n    /* flip the pane when hovered */\n    .S3-display.S3-uploading .S3-flipper {\n      transform: rotateX(-180deg);\n    }\n\n    .S3-display, .S3-front, .S3-back {\n      width: 100%;\n      height: 100px;\n    }\n\n    /* flip speed goes here */\n    .S3-flipper {\n      transition: 0.3s;\n      transform-style: preserve-3d;\n      position: relative;\n      transform-origin: 100% 50px; /* half of height */*/\n    }\n\n    /* hide back of pane during swap */\n    .S3-front, .S3-back {\n      backface-visibility: hidden;\n\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n\n    /* front pane, placed above back */\n    .S3-front {\n      z-index: 2;\n      /* for firefox 31 */\n      transform: rotateX(0deg);\n    }\n\n    /* back, initially hidden pane */\n    .S3-back {\n      transform: rotateX(180deg);\n    }\n\n\n  </style>\n  <div class="S3-display" ng-class="{\'S3-uploading\': uploading}">\n    <div class="S3-flipper">\n      <div class="S3-front">\n        <div id="s3-drop-target">\n          <span>{{dropText}}</span>\n          <span ng-show="displayError" class="text-danger"> File Type Error: {{errorText}}</span>\n        </div>\n      </div>\n      <div class="S3-back">\n        <div class="progress">\n          <div class="progress-bar" ng-class="{\'active\': uploading, \'bar-success\': attempt && !uploading && success}" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: {{ progress }}%;">\n            <span class="sr-only">{{progress}}% Complete</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <input type="file" style="display: none" id="s3-file-target"/>\n</div>\n')}]);